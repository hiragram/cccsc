name: Test

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check package.json for lint script
      id: check-lint
      run: |
        if npm run | grep -q "lint"; then
          echo "has_lint=true" >> $GITHUB_OUTPUT
        else
          echo "has_lint=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run linter
      if: steps.check-lint.outputs.has_lint == 'true'
      run: npm run lint

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check package.json for build script
      id: check-build
      run: |
        if npm run | grep -q "build"; then
          echo "has_build=true" >> $GITHUB_OUTPUT
        else
          echo "has_build=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run build
      if: steps.check-build.outputs.has_build == 'true'
      run: npm run build
    
    - name: Test CLI installation
      run: |
        npm install -g .
        cccsc --help